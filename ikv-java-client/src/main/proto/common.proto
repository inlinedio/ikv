syntax = "proto3";

option java_package = "com.inlineio.schemas";

package ikvschemas;

message IKVDocumentOnWire {
  // field_name vs field_value
  map<string, FieldValue> document = 1;
}

message FieldValue {
  FieldType fieldType = 1;
  bytes value = 2;

  //oneof Value {
    //int32 int32Value = 1;
    //int64 int64Value = 2;
    //float float32Value = 3;
    //double float64Value = 4;
    //string stringValue = 5;
    //bytes bytesValue = 6;
  //}
}

message FieldSchema {
  // the case-sensitive field name
  string name = 1;

  // unique field-id. `name` and `id`
  // have 1:1 mappings.
  int32 id = 2;

  FieldType fieldType = 3;
}

enum FieldType {
  // usually signifies writer/producer is ahead
  // w.r.t the symbol list
  UNKNOWN = 0;

  INT32 = 1;
  INT64 = 2;
  FLOAT32 = 3;
  FLOAT64 = 4;
  STRING = 5;
  BYTES = 6;
}

message IKVStoreConfig {
  // Map key uniquely defines a config key
  // Config keys are unique across all typed maps
  map<string, string> stringConfigs = 1;
  map<string, int64> numericConfigs = 2;
  map<string, bytes> bytesConfigs = 3;
}