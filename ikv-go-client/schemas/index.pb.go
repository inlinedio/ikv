// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.23.3
// source: index.proto

package schemas

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// / Index level headers and metadata.
type CKVIndexHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// / Epoch (~ build time) of the current base index.
	BaseIndexEpochMillis uint64 `protobuf:"varint,1,opt,name=base_index_epoch_millis,json=baseIndexEpochMillis,proto3" json:"base_index_epoch_millis,omitempty"`
}

func (x *CKVIndexHeader) Reset() {
	*x = CKVIndexHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CKVIndexHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CKVIndexHeader) ProtoMessage() {}

func (x *CKVIndexHeader) ProtoReflect() protoreflect.Message {
	mi := &file_index_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CKVIndexHeader.ProtoReflect.Descriptor instead.
func (*CKVIndexHeader) Descriptor() ([]byte, []int) {
	return file_index_proto_rawDescGZIP(), []int{0}
}

func (x *CKVIndexHeader) GetBaseIndexEpochMillis() uint64 {
	if x != nil {
		return x.BaseIndexEpochMillis
	}
	return 0
}

type SavedCKVIndexSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrimaryKeyFieldName string            `protobuf:"bytes,1,opt,name=primary_key_field_name,json=primaryKeyFieldName,proto3" json:"primary_key_field_name,omitempty"`
	FieldIds            map[string]uint32 `protobuf:"bytes,2,rep,name=field_ids,json=fieldIds,proto3" json:"field_ids,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// Used to assign field-ids to new fields. Primary-key always gets id=0.
	// Current value denotes an available id, i.e.
	// [0, current-1] are already taken.
	FieldIdCounter uint64 `protobuf:"varint,3,opt,name=field_id_counter,json=fieldIdCounter,proto3" json:"field_id_counter,omitempty"`
}

func (x *SavedCKVIndexSchema) Reset() {
	*x = SavedCKVIndexSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SavedCKVIndexSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SavedCKVIndexSchema) ProtoMessage() {}

func (x *SavedCKVIndexSchema) ProtoReflect() protoreflect.Message {
	mi := &file_index_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SavedCKVIndexSchema.ProtoReflect.Descriptor instead.
func (*SavedCKVIndexSchema) Descriptor() ([]byte, []int) {
	return file_index_proto_rawDescGZIP(), []int{1}
}

func (x *SavedCKVIndexSchema) GetPrimaryKeyFieldName() string {
	if x != nil {
		return x.PrimaryKeyFieldName
	}
	return ""
}

func (x *SavedCKVIndexSchema) GetFieldIds() map[string]uint32 {
	if x != nil {
		return x.FieldIds
	}
	return nil
}

func (x *SavedCKVIndexSchema) GetFieldIdCounter() uint64 {
	if x != nil {
		return x.FieldIdCounter
	}
	return 0
}

// Single entry in offset table on-disk stream.
type OffsetTableEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Operation:
	//
	//	*OffsetTableEntry_UpdateDocFields
	//	*OffsetTableEntry_DeleteDocFields
	//	*OffsetTableEntry_DeleteDoc
	Operation isOffsetTableEntry_Operation `protobuf_oneof:"operation"`
}

func (x *OffsetTableEntry) Reset() {
	*x = OffsetTableEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OffsetTableEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OffsetTableEntry) ProtoMessage() {}

func (x *OffsetTableEntry) ProtoReflect() protoreflect.Message {
	mi := &file_index_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OffsetTableEntry.ProtoReflect.Descriptor instead.
func (*OffsetTableEntry) Descriptor() ([]byte, []int) {
	return file_index_proto_rawDescGZIP(), []int{2}
}

func (m *OffsetTableEntry) GetOperation() isOffsetTableEntry_Operation {
	if m != nil {
		return m.Operation
	}
	return nil
}

func (x *OffsetTableEntry) GetUpdateDocFields() *UpdateDocFields {
	if x, ok := x.GetOperation().(*OffsetTableEntry_UpdateDocFields); ok {
		return x.UpdateDocFields
	}
	return nil
}

func (x *OffsetTableEntry) GetDeleteDocFields() *DeleteDocFields {
	if x, ok := x.GetOperation().(*OffsetTableEntry_DeleteDocFields); ok {
		return x.DeleteDocFields
	}
	return nil
}

func (x *OffsetTableEntry) GetDeleteDoc() *DeleteDoc {
	if x, ok := x.GetOperation().(*OffsetTableEntry_DeleteDoc); ok {
		return x.DeleteDoc
	}
	return nil
}

type isOffsetTableEntry_Operation interface {
	isOffsetTableEntry_Operation()
}

type OffsetTableEntry_UpdateDocFields struct {
	UpdateDocFields *UpdateDocFields `protobuf:"bytes,1,opt,name=updateDocFields,proto3,oneof"`
}

type OffsetTableEntry_DeleteDocFields struct {
	DeleteDocFields *DeleteDocFields `protobuf:"bytes,2,opt,name=deleteDocFields,proto3,oneof"`
}

type OffsetTableEntry_DeleteDoc struct {
	DeleteDoc *DeleteDoc `protobuf:"bytes,3,opt,name=deleteDoc,proto3,oneof"`
}

func (*OffsetTableEntry_UpdateDocFields) isOffsetTableEntry_Operation() {}

func (*OffsetTableEntry_DeleteDocFields) isOffsetTableEntry_Operation() {}

func (*OffsetTableEntry_DeleteDoc) isOffsetTableEntry_Operation() {}

type UpdateDocFields struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrimaryKey []byte   `protobuf:"bytes,1,opt,name=primary_key,json=primaryKey,proto3" json:"primary_key,omitempty"`
	FieldIds   []uint32 `protobuf:"varint,2,rep,packed,name=field_ids,json=fieldIds,proto3" json:"field_ids,omitempty"`
	Offsets    []uint64 `protobuf:"varint,3,rep,packed,name=offsets,proto3" json:"offsets,omitempty"`
}

func (x *UpdateDocFields) Reset() {
	*x = UpdateDocFields{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDocFields) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDocFields) ProtoMessage() {}

func (x *UpdateDocFields) ProtoReflect() protoreflect.Message {
	mi := &file_index_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDocFields.ProtoReflect.Descriptor instead.
func (*UpdateDocFields) Descriptor() ([]byte, []int) {
	return file_index_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateDocFields) GetPrimaryKey() []byte {
	if x != nil {
		return x.PrimaryKey
	}
	return nil
}

func (x *UpdateDocFields) GetFieldIds() []uint32 {
	if x != nil {
		return x.FieldIds
	}
	return nil
}

func (x *UpdateDocFields) GetOffsets() []uint64 {
	if x != nil {
		return x.Offsets
	}
	return nil
}

type DeleteDocFields struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrimaryKey []byte   `protobuf:"bytes,1,opt,name=primary_key,json=primaryKey,proto3" json:"primary_key,omitempty"`
	FieldIds   []uint32 `protobuf:"varint,2,rep,packed,name=field_ids,json=fieldIds,proto3" json:"field_ids,omitempty"`
}

func (x *DeleteDocFields) Reset() {
	*x = DeleteDocFields{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDocFields) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDocFields) ProtoMessage() {}

func (x *DeleteDocFields) ProtoReflect() protoreflect.Message {
	mi := &file_index_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDocFields.ProtoReflect.Descriptor instead.
func (*DeleteDocFields) Descriptor() ([]byte, []int) {
	return file_index_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteDocFields) GetPrimaryKey() []byte {
	if x != nil {
		return x.PrimaryKey
	}
	return nil
}

func (x *DeleteDocFields) GetFieldIds() []uint32 {
	if x != nil {
		return x.FieldIds
	}
	return nil
}

type DeleteDoc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrimaryKey []byte `protobuf:"bytes,1,opt,name=primary_key,json=primaryKey,proto3" json:"primary_key,omitempty"`
}

func (x *DeleteDoc) Reset() {
	*x = DeleteDoc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDoc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDoc) ProtoMessage() {}

func (x *DeleteDoc) ProtoReflect() protoreflect.Message {
	mi := &file_index_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDoc.ProtoReflect.Descriptor instead.
func (*DeleteDoc) Descriptor() ([]byte, []int) {
	return file_index_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteDoc) GetPrimaryKey() []byte {
	if x != nil {
		return x.PrimaryKey
	}
	return nil
}

type CKVIndexSegmentMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// defaults to 0
	MmapWriteOffset uint64 `protobuf:"varint,1,opt,name=mmap_write_offset,json=mmapWriteOffset,proto3" json:"mmap_write_offset,omitempty"`
}

func (x *CKVIndexSegmentMetadata) Reset() {
	*x = CKVIndexSegmentMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CKVIndexSegmentMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CKVIndexSegmentMetadata) ProtoMessage() {}

func (x *CKVIndexSegmentMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_index_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CKVIndexSegmentMetadata.ProtoReflect.Descriptor instead.
func (*CKVIndexSegmentMetadata) Descriptor() ([]byte, []int) {
	return file_index_proto_rawDescGZIP(), []int{6}
}

func (x *CKVIndexSegmentMetadata) GetMmapWriteOffset() uint64 {
	if x != nil {
		return x.MmapWriteOffset
	}
	return 0
}

type KafkaOffsetStore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*KafkaOffsetStoreEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *KafkaOffsetStore) Reset() {
	*x = KafkaOffsetStore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KafkaOffsetStore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KafkaOffsetStore) ProtoMessage() {}

func (x *KafkaOffsetStore) ProtoReflect() protoreflect.Message {
	mi := &file_index_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KafkaOffsetStore.ProtoReflect.Descriptor instead.
func (*KafkaOffsetStore) Descriptor() ([]byte, []int) {
	return file_index_proto_rawDescGZIP(), []int{7}
}

func (x *KafkaOffsetStore) GetEntries() []*KafkaOffsetStoreEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type KafkaOffsetStoreEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic     string `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Partition int32  `protobuf:"varint,2,opt,name=partition,proto3" json:"partition,omitempty"`
	Offset    int64  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *KafkaOffsetStoreEntry) Reset() {
	*x = KafkaOffsetStoreEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KafkaOffsetStoreEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KafkaOffsetStoreEntry) ProtoMessage() {}

func (x *KafkaOffsetStoreEntry) ProtoReflect() protoreflect.Message {
	mi := &file_index_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KafkaOffsetStoreEntry.ProtoReflect.Descriptor instead.
func (*KafkaOffsetStoreEntry) Descriptor() ([]byte, []int) {
	return file_index_proto_rawDescGZIP(), []int{8}
}

func (x *KafkaOffsetStoreEntry) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *KafkaOffsetStoreEntry) GetPartition() int32 {
	if x != nil {
		return x.Partition
	}
	return 0
}

func (x *KafkaOffsetStoreEntry) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

var File_index_proto protoreflect.FileDescriptor

var file_index_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x69,
	0x6b, 0x76, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x47, 0x0a, 0x0e, 0x43, 0x4b, 0x56, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x17, 0x62, 0x61, 0x73,
	0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x6d, 0x69,
	0x6c, 0x6c, 0x69, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x62, 0x61, 0x73, 0x65,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73,
	0x22, 0xfd, 0x01, 0x0a, 0x13, 0x53, 0x61, 0x76, 0x65, 0x64, 0x43, 0x4b, 0x56, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x33, 0x0a, 0x16, 0x70, 0x72, 0x69, 0x6d,
	0x61, 0x72, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72,
	0x79, 0x4b, 0x65, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4a, 0x0a,
	0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x69, 0x6b, 0x76, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2e, 0x53, 0x61,
	0x76, 0x65, 0x64, 0x43, 0x4b, 0x56, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x49, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x08, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x49, 0x64, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x5f, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0e, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x49, 0x64, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x1a, 0x3b, 0x0a, 0x0d, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x49, 0x64, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0xe8, 0x01, 0x0a, 0x10, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x47, 0x0a, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44,
	0x6f, 0x63, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x69, 0x6b, 0x76, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x44, 0x6f, 0x63, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x48, 0x00, 0x52, 0x0f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x47,
	0x0a, 0x0f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x69, 0x6b, 0x76, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x48, 0x00, 0x52, 0x0f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f,
	0x63, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x35, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x44, 0x6f, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x69, 0x6b, 0x76,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f,
	0x63, 0x48, 0x00, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x42, 0x0b,
	0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x69, 0x0a, 0x0f, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x12,
	0x1b, 0x0a, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x08, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x49, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x73, 0x22, 0x4f, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x44, 0x6f, 0x63, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69,
	0x6d, 0x61, 0x72, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a,
	0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x49, 0x64, 0x73, 0x22, 0x2c, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x44, 0x6f, 0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x4b, 0x65, 0x79, 0x22, 0x45, 0x0a, 0x17, 0x43, 0x4b, 0x56, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x6d, 0x61, 0x70, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x6d, 0x6d, 0x61,
	0x70, 0x57, 0x72, 0x69, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x4f, 0x0a, 0x10,
	0x4b, 0x61, 0x66, 0x6b, 0x61, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x12, 0x3b, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x69, 0x6b, 0x76, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2e, 0x4b,
	0x61, 0x66, 0x6b, 0x61, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x63, 0x0a,
	0x15, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x42, 0x20, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x2e, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x5a, 0x08, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x73, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_index_proto_rawDescOnce sync.Once
	file_index_proto_rawDescData = file_index_proto_rawDesc
)

func file_index_proto_rawDescGZIP() []byte {
	file_index_proto_rawDescOnce.Do(func() {
		file_index_proto_rawDescData = protoimpl.X.CompressGZIP(file_index_proto_rawDescData)
	})
	return file_index_proto_rawDescData
}

var file_index_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_index_proto_goTypes = []interface{}{
	(*CKVIndexHeader)(nil),          // 0: ikvschemas.CKVIndexHeader
	(*SavedCKVIndexSchema)(nil),     // 1: ikvschemas.SavedCKVIndexSchema
	(*OffsetTableEntry)(nil),        // 2: ikvschemas.OffsetTableEntry
	(*UpdateDocFields)(nil),         // 3: ikvschemas.UpdateDocFields
	(*DeleteDocFields)(nil),         // 4: ikvschemas.DeleteDocFields
	(*DeleteDoc)(nil),               // 5: ikvschemas.DeleteDoc
	(*CKVIndexSegmentMetadata)(nil), // 6: ikvschemas.CKVIndexSegmentMetadata
	(*KafkaOffsetStore)(nil),        // 7: ikvschemas.KafkaOffsetStore
	(*KafkaOffsetStoreEntry)(nil),   // 8: ikvschemas.KafkaOffsetStoreEntry
	nil,                             // 9: ikvschemas.SavedCKVIndexSchema.FieldIdsEntry
}
var file_index_proto_depIdxs = []int32{
	9, // 0: ikvschemas.SavedCKVIndexSchema.field_ids:type_name -> ikvschemas.SavedCKVIndexSchema.FieldIdsEntry
	3, // 1: ikvschemas.OffsetTableEntry.updateDocFields:type_name -> ikvschemas.UpdateDocFields
	4, // 2: ikvschemas.OffsetTableEntry.deleteDocFields:type_name -> ikvschemas.DeleteDocFields
	5, // 3: ikvschemas.OffsetTableEntry.deleteDoc:type_name -> ikvschemas.DeleteDoc
	8, // 4: ikvschemas.KafkaOffsetStore.entries:type_name -> ikvschemas.KafkaOffsetStoreEntry
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_index_proto_init() }
func file_index_proto_init() {
	if File_index_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_index_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CKVIndexHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SavedCKVIndexSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OffsetTableEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDocFields); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDocFields); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDoc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CKVIndexSegmentMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KafkaOffsetStore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KafkaOffsetStoreEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_index_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*OffsetTableEntry_UpdateDocFields)(nil),
		(*OffsetTableEntry_DeleteDocFields)(nil),
		(*OffsetTableEntry_DeleteDoc)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_index_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_index_proto_goTypes,
		DependencyIndexes: file_index_proto_depIdxs,
		MessageInfos:      file_index_proto_msgTypes,
	}.Build()
	File_index_proto = out.File
	file_index_proto_rawDesc = nil
	file_index_proto_goTypes = nil
	file_index_proto_depIdxs = nil
}
