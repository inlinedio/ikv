// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.23.3
// source: streaming.proto

package schemas

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceTimestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=sourceTimestamp,proto3,oneof" json:"sourceTimestamp,omitempty"`
}

func (x *EventHeader) Reset() {
	*x = EventHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streaming_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventHeader) ProtoMessage() {}

func (x *EventHeader) ProtoReflect() protoreflect.Message {
	mi := &file_streaming_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventHeader.ProtoReflect.Descriptor instead.
func (*EventHeader) Descriptor() ([]byte, []int) {
	return file_streaming_proto_rawDescGZIP(), []int{0}
}

func (x *EventHeader) GetSourceTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.SourceTimestamp
	}
	return nil
}

type IKVDataEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventHeader *EventHeader `protobuf:"bytes,1,opt,name=eventHeader,proto3" json:"eventHeader,omitempty"`
	// event data (upsert, delete, etc...)
	//
	// Types that are assignable to Event:
	//
	//	*IKVDataEvent_UpsertDocumentFieldsEvent
	//	*IKVDataEvent_DeleteDocumentFieldsEvent
	//	*IKVDataEvent_DeleteDocumentEvent
	Event isIKVDataEvent_Event `protobuf_oneof:"event"`
}

func (x *IKVDataEvent) Reset() {
	*x = IKVDataEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streaming_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IKVDataEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IKVDataEvent) ProtoMessage() {}

func (x *IKVDataEvent) ProtoReflect() protoreflect.Message {
	mi := &file_streaming_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IKVDataEvent.ProtoReflect.Descriptor instead.
func (*IKVDataEvent) Descriptor() ([]byte, []int) {
	return file_streaming_proto_rawDescGZIP(), []int{1}
}

func (x *IKVDataEvent) GetEventHeader() *EventHeader {
	if x != nil {
		return x.EventHeader
	}
	return nil
}

func (m *IKVDataEvent) GetEvent() isIKVDataEvent_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *IKVDataEvent) GetUpsertDocumentFieldsEvent() *UpsertDocumentFieldsEvent {
	if x, ok := x.GetEvent().(*IKVDataEvent_UpsertDocumentFieldsEvent); ok {
		return x.UpsertDocumentFieldsEvent
	}
	return nil
}

func (x *IKVDataEvent) GetDeleteDocumentFieldsEvent() *DeleteDocumentFieldsEvent {
	if x, ok := x.GetEvent().(*IKVDataEvent_DeleteDocumentFieldsEvent); ok {
		return x.DeleteDocumentFieldsEvent
	}
	return nil
}

func (x *IKVDataEvent) GetDeleteDocumentEvent() *DeleteDocumentEvent {
	if x, ok := x.GetEvent().(*IKVDataEvent_DeleteDocumentEvent); ok {
		return x.DeleteDocumentEvent
	}
	return nil
}

type isIKVDataEvent_Event interface {
	isIKVDataEvent_Event()
}

type IKVDataEvent_UpsertDocumentFieldsEvent struct {
	UpsertDocumentFieldsEvent *UpsertDocumentFieldsEvent `protobuf:"bytes,2,opt,name=upsertDocumentFieldsEvent,proto3,oneof"`
}

type IKVDataEvent_DeleteDocumentFieldsEvent struct {
	DeleteDocumentFieldsEvent *DeleteDocumentFieldsEvent `protobuf:"bytes,3,opt,name=deleteDocumentFieldsEvent,proto3,oneof"`
}

type IKVDataEvent_DeleteDocumentEvent struct {
	DeleteDocumentEvent *DeleteDocumentEvent `protobuf:"bytes,4,opt,name=deleteDocumentEvent,proto3,oneof"`
}

func (*IKVDataEvent_UpsertDocumentFieldsEvent) isIKVDataEvent_Event() {}

func (*IKVDataEvent_DeleteDocumentFieldsEvent) isIKVDataEvent_Event() {}

func (*IKVDataEvent_DeleteDocumentEvent) isIKVDataEvent_Event() {}

// Upsert fields for specified document.
type UpsertDocumentFieldsEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Document *IKVDocumentOnWire `protobuf:"bytes,1,opt,name=document,proto3" json:"document,omitempty"`
}

func (x *UpsertDocumentFieldsEvent) Reset() {
	*x = UpsertDocumentFieldsEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streaming_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertDocumentFieldsEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertDocumentFieldsEvent) ProtoMessage() {}

func (x *UpsertDocumentFieldsEvent) ProtoReflect() protoreflect.Message {
	mi := &file_streaming_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertDocumentFieldsEvent.ProtoReflect.Descriptor instead.
func (*UpsertDocumentFieldsEvent) Descriptor() ([]byte, []int) {
	return file_streaming_proto_rawDescGZIP(), []int{2}
}

func (x *UpsertDocumentFieldsEvent) GetDocument() *IKVDocumentOnWire {
	if x != nil {
		return x.Document
	}
	return nil
}

// Delete specified fields for specified document.
type DeleteDocumentFieldsEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DocumentId     *IKVDocumentOnWire `protobuf:"bytes,1,opt,name=documentId,proto3" json:"documentId,omitempty"`
	FieldsToDelete []string           `protobuf:"bytes,2,rep,name=fieldsToDelete,proto3" json:"fieldsToDelete,omitempty"`
}

func (x *DeleteDocumentFieldsEvent) Reset() {
	*x = DeleteDocumentFieldsEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streaming_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDocumentFieldsEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDocumentFieldsEvent) ProtoMessage() {}

func (x *DeleteDocumentFieldsEvent) ProtoReflect() protoreflect.Message {
	mi := &file_streaming_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDocumentFieldsEvent.ProtoReflect.Descriptor instead.
func (*DeleteDocumentFieldsEvent) Descriptor() ([]byte, []int) {
	return file_streaming_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteDocumentFieldsEvent) GetDocumentId() *IKVDocumentOnWire {
	if x != nil {
		return x.DocumentId
	}
	return nil
}

func (x *DeleteDocumentFieldsEvent) GetFieldsToDelete() []string {
	if x != nil {
		return x.FieldsToDelete
	}
	return nil
}

// Delete specified document.
type DeleteDocumentEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DocumentId *IKVDocumentOnWire `protobuf:"bytes,1,opt,name=documentId,proto3" json:"documentId,omitempty"`
}

func (x *DeleteDocumentEvent) Reset() {
	*x = DeleteDocumentEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streaming_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDocumentEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDocumentEvent) ProtoMessage() {}

func (x *DeleteDocumentEvent) ProtoReflect() protoreflect.Message {
	mi := &file_streaming_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDocumentEvent.ProtoReflect.Descriptor instead.
func (*DeleteDocumentEvent) Descriptor() ([]byte, []int) {
	return file_streaming_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteDocumentEvent) GetDocumentId() *IKVDocumentOnWire {
	if x != nil {
		return x.DocumentId
	}
	return nil
}

var File_streaming_proto protoreflect.FileDescriptor

var file_streaming_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0a, 0x69, 0x6b, 0x76, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6c, 0x0a, 0x0b,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x49, 0x0a, 0x0f, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x48, 0x00, 0x52, 0x0f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x88, 0x01, 0x01, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xf5, 0x02, 0x0a, 0x0c, 0x49,
	0x4b, 0x56, 0x44, 0x61, 0x74, 0x61, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x0b, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x69, 0x6b, 0x76, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x65, 0x0a, 0x19, 0x75, 0x70, 0x73, 0x65, 0x72, 0x74,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x69, 0x6b, 0x76, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x48, 0x00, 0x52, 0x19, 0x75, 0x70, 0x73, 0x65, 0x72, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x65, 0x0a,
	0x19, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x69, 0x6b, 0x76, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x19, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x53, 0x0a, 0x13, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x69, 0x6b, 0x76, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x48, 0x00, 0x52, 0x13, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x22, 0x56, 0x0a, 0x19, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x39, 0x0a, 0x08, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x69, 0x6b, 0x76, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2e, 0x49,
	0x4b, 0x56, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x57, 0x69, 0x72, 0x65,
	0x52, 0x08, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x82, 0x01, 0x0a, 0x19, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x0a, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x69,
	0x6b, 0x76, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2e, 0x49, 0x4b, 0x56, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x57, 0x69, 0x72, 0x65, 0x52, 0x0a, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x54, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0e, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x54, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x22,
	0x54, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x0a, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x69, 0x6b, 0x76,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2e, 0x49, 0x4b, 0x56, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x57, 0x69, 0x72, 0x65, 0x52, 0x0a, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x42, 0x20, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x2e, 0x69, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x5a, 0x08, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_streaming_proto_rawDescOnce sync.Once
	file_streaming_proto_rawDescData = file_streaming_proto_rawDesc
)

func file_streaming_proto_rawDescGZIP() []byte {
	file_streaming_proto_rawDescOnce.Do(func() {
		file_streaming_proto_rawDescData = protoimpl.X.CompressGZIP(file_streaming_proto_rawDescData)
	})
	return file_streaming_proto_rawDescData
}

var file_streaming_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_streaming_proto_goTypes = []interface{}{
	(*EventHeader)(nil),               // 0: ikvschemas.EventHeader
	(*IKVDataEvent)(nil),              // 1: ikvschemas.IKVDataEvent
	(*UpsertDocumentFieldsEvent)(nil), // 2: ikvschemas.UpsertDocumentFieldsEvent
	(*DeleteDocumentFieldsEvent)(nil), // 3: ikvschemas.DeleteDocumentFieldsEvent
	(*DeleteDocumentEvent)(nil),       // 4: ikvschemas.DeleteDocumentEvent
	(*timestamppb.Timestamp)(nil),     // 5: google.protobuf.Timestamp
	(*IKVDocumentOnWire)(nil),         // 6: ikvschemas.IKVDocumentOnWire
}
var file_streaming_proto_depIdxs = []int32{
	5, // 0: ikvschemas.EventHeader.sourceTimestamp:type_name -> google.protobuf.Timestamp
	0, // 1: ikvschemas.IKVDataEvent.eventHeader:type_name -> ikvschemas.EventHeader
	2, // 2: ikvschemas.IKVDataEvent.upsertDocumentFieldsEvent:type_name -> ikvschemas.UpsertDocumentFieldsEvent
	3, // 3: ikvschemas.IKVDataEvent.deleteDocumentFieldsEvent:type_name -> ikvschemas.DeleteDocumentFieldsEvent
	4, // 4: ikvschemas.IKVDataEvent.deleteDocumentEvent:type_name -> ikvschemas.DeleteDocumentEvent
	6, // 5: ikvschemas.UpsertDocumentFieldsEvent.document:type_name -> ikvschemas.IKVDocumentOnWire
	6, // 6: ikvschemas.DeleteDocumentFieldsEvent.documentId:type_name -> ikvschemas.IKVDocumentOnWire
	6, // 7: ikvschemas.DeleteDocumentEvent.documentId:type_name -> ikvschemas.IKVDocumentOnWire
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_streaming_proto_init() }
func file_streaming_proto_init() {
	if File_streaming_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_streaming_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streaming_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IKVDataEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streaming_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertDocumentFieldsEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streaming_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDocumentFieldsEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streaming_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDocumentEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_streaming_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_streaming_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*IKVDataEvent_UpsertDocumentFieldsEvent)(nil),
		(*IKVDataEvent_DeleteDocumentFieldsEvent)(nil),
		(*IKVDataEvent_DeleteDocumentEvent)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_streaming_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_streaming_proto_goTypes,
		DependencyIndexes: file_streaming_proto_depIdxs,
		MessageInfos:      file_streaming_proto_msgTypes,
	}.Build()
	File_streaming_proto = out.File
	file_streaming_proto_rawDesc = nil
	file_streaming_proto_goTypes = nil
	file_streaming_proto_depIdxs = nil
}
